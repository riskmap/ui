$panel--collapsible-item-header-pad-h: _get($--panels, 'collapsible-item-header-horizontal-padding');

.collapsible {

  .collapsible--body {
    overflow: hidden;
    color: _get($--panels, 'collapsible-body-color');
    background-color: _get($--panels, 'collapsible-body-background-color');
    .cp-Panel-body-inner > .panel--item-content {
      background-color: _get($--panels, 'collapsible-item-background-color');
    }
    .liquid-child .panel--content { position: relative; }
  }

  & > .panel--item {
    &:not(:last-of-type) {
      .panel--collapsible-body {
        &.cp-is-open {
          // border-bottom: 1px solid darken(color('lt-gray'), 5%);
        }
      }
    }
  }

  .panel--item-header {
    i {
      transform: rotate(-90deg);
      transition: transform .2s ease('jump', 'out');
    }
    &.cp-is-open {
      color: white;
      i {
        transform: rotate(0deg);
      }
    }
  }

  .panel--item .panel--item-header {
    height: _get($--panels, 'collapsible-item-header-height');
    color: _get($--panels, 'collapsible-item-header-color');
    background-color: _get($--panels, 'collapsible-item-header-background-color');
    box-shadow: _get($--panels, 'collapsible-item-header-box-shadow');
    @extend .font--#{_get($--panels, 'collapsible-item-header-font')};
    font-size: _get($--panels, 'collapsible-item-header-font-size');

    &.padding--xs { padding: 0 nth($panel--collapsible-item-header-pad-h, 1); }
    &.padding--sm { padding: 0 nth($panel--collapsible-item-header-pad-h, 2); }
    &.padding--md { padding: 0 nth($panel--collapsible-item-header-pad-h, 3); }
    &.padding--lg { padding: 0 nth($panel--collapsible-item-header-pad-h, 4); }
    &.padding--xl { padding: 0 nth($panel--collapsible-item-header-pad-h, 5); }

    &:hover {
      color: _get($--panels, 'collapsible-item-header-hover-color');
      background-color: _get($--panels, 'collapsible-item-header-hover-background-color');
      box-shadow: _get($--panels, 'collapsible-item-header-hover-box-shadow');
    }

  }

}
